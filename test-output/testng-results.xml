<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="6" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="1795" started-at="2019-04-21T14:18:23Z" finished-at="2019-04-21T14:18:25Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="1795" started-at="2019-04-21T14:18:23Z" finished-at="2019-04-21T14:18:25Z">
      <class name="scripty.test.consistency.UserManagementServiceTest">
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:scripty.test.consistency.UserManagementServiceTest@ff5b51f]" name="beforeTest" is-config="true" duration-ms="334" started-at="2019-04-21T14:18:23Z" finished-at="2019-04-21T14:18:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="createUser()[pri:0, instance:scripty.test.consistency.UserManagementServiceTest@ff5b51f]" name="createUser" duration-ms="1137" started-at="2019-04-21T14:18:24Z" finished-at="2019-04-21T14:18:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createUser -->
        <test-method status="PASS" signature="createDuplicateUser()[pri:0, instance:scripty.test.consistency.UserManagementServiceTest@ff5b51f]" name="createDuplicateUser" duration-ms="99" started-at="2019-04-21T14:18:25Z" depends-on-methods="scripty.test.consistency.UserManagementServiceTest.createUser" finished-at="2019-04-21T14:18:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createDuplicateUser -->
        <test-method status="FAIL" signature="getUser()[pri:0, instance:scripty.test.consistency.UserManagementServiceTest@ff5b51f]" name="getUser" duration-ms="35" started-at="2019-04-21T14:18:25Z" depends-on-methods="scripty.test.consistency.UserManagementServiceTest.createDuplicateUser" finished-at="2019-04-21T14:18:25Z">
          <exception class="javax.ws.rs.BadRequestException">
            <message>
              <![CDATA[HTTP 400 Bad Request]]>
            </message>
            <full-stacktrace>
              <![CDATA[javax.ws.rs.BadRequestException: HTTP 400 Bad Request
at org.glassfish.jersey.client.JerseyInvocation.convertToException(JerseyInvocation.java:1011)
at org.glassfish.jersey.client.JerseyInvocation.translate(JerseyInvocation.java:819)
at org.glassfish.jersey.client.JerseyInvocation.access$700(JerseyInvocation.java:92)
at org.glassfish.jersey.client.JerseyInvocation$2.call(JerseyInvocation.java:701)
at org.glassfish.jersey.internal.Errors.process(Errors.java:315)
at org.glassfish.jersey.internal.Errors.process(Errors.java:297)
at org.glassfish.jersey.internal.Errors.process(Errors.java:228)
at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:444)
at org.glassfish.jersey.client.JerseyInvocation.invoke(JerseyInvocation.java:697)
at org.glassfish.jersey.client.JerseyInvocation$Builder.method(JerseyInvocation.java:420)
at org.glassfish.jersey.client.JerseyInvocation$Builder.get(JerseyInvocation.java:316)
at scripty.rest.client.RestClient.getUser(RestClient.java:42)
at scripty.test.consistency.UserManagementServiceTest.getUser(UserManagementServiceTest.java:70)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- javax.ws.rs.BadRequestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUser -->
        <test-method status="PASS" signature="iterateUsers()[pri:0, instance:scripty.test.consistency.UserManagementServiceTest@ff5b51f]" name="iterateUsers" duration-ms="2" started-at="2019-04-21T14:18:25Z" depends-on-methods="scripty.test.consistency.UserManagementServiceTest.createDuplicateUser" finished-at="2019-04-21T14:18:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iterateUsers -->
        <test-method status="PASS" signature="updateUser()[pri:0, instance:scripty.test.consistency.UserManagementServiceTest@ff5b51f]" name="updateUser" duration-ms="2" started-at="2019-04-21T14:18:25Z" depends-on-methods="scripty.test.consistency.UserManagementServiceTest.createDuplicateUser" finished-at="2019-04-21T14:18:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUser -->
        <test-method status="PASS" signature="deleteUser()[pri:0, instance:scripty.test.consistency.UserManagementServiceTest@ff5b51f]" name="deleteUser" duration-ms="142" started-at="2019-04-21T14:18:25Z" depends-on-methods="scripty.test.consistency.UserManagementServiceTest.iterateUsers" finished-at="2019-04-21T14:18:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteUser -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:scripty.test.consistency.UserManagementServiceTest@ff5b51f]" name="afterTest" is-config="true" duration-ms="5" started-at="2019-04-21T14:18:25Z" finished-at="2019-04-21T14:18:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
      </class> <!-- scripty.test.consistency.UserManagementServiceTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
